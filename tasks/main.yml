---

# Main tasks file for vagrant role

- name: Load OS variables
  include_vars: "{{ role_path }}/vars/{{ ansible_os_family | lower }}.yml"
  tags:
    - vagrant
    - install

- name: Get packages checksums
  uri:
    url: "{{ vagrant_url_checksum }}"
    return_content: True
  changed_when: False
  register: vagrant_packages_checksums
  tags:
    - vagrant
    - install

- name: Extract package checksum
  command: "echo {{ (item.split(' '))[0] }}"
  register: vagrant_package_checksum
  changed_when: False
  with_items: "{{ vagrant_packages_checksums.content.split('\n') }}"
  when: vagrant_package_filename in item
  tags:
    - vagrant
    - install

- name: Get vagrant version if installed
  command: 'vagrant --version'
  register: vagrant_installed_version
  changed_when: False
  ignore_errors: True
  tags:
    - vagrant
    - install

- name: Download Vagrant package
  get_url:
    url: "{{ vagrant_url_download ~ '/' ~ vagrant_package_filename }}"
    dest: '/tmp/'
    checksum: "sha256:{{ item.stdout }}"
  register: vagrant_download_package
  with_items: "{{ vagrant_package_checksum.results }}"
  when:
    - "{{ (vagrant_installed_version | failed)
          or (vagrant_installed_version.stdout.split(' ')[1]
              != vagrant_package_version) }}"
    - "{{ item.stdout is defined }}"
  tags:
    - vagrant
    - install

- name: Manage OS specific installation tasks
  include: "{{ role_path }}/tasks/install_{{ ansible_os_family | lower }}.yml"
  when: "{{ vagrant_download_package | changed }}"
  tags:
    - vagrant
    - install

- name: Delete package file
  file:
    dest: "/tmp/{{ vagrant_package_filename }}"
    state: 'absent'
  tags:
    - vagrant
    - install

- name: List installed Vagrant plugins
  become: True
  become_user: "{{ vagrant_plugins_user }}"
  command: "vagrant plugin list"
  changed_when: False
  register: vagrant_initial_plugins_list
  when: "{{ vagrant_plugins_user != '' }}"
  tags:
    - vagrant
    - install

- name: Install Vagrant plugins
  become: True
  become_user: "{{ vagrant_plugins_user }}"
  command: "vagrant plugin install {{ item.name }}"
  with_items: "{{ vagrant_plugins }}"
  when:
    - "{{ vagrant_plugins_user != '' }}"
    - "{{ item.state == 'present' }}"
    - "{{ item.name not in vagrant_initial_plugins_list.stdout }}"
  tags:
    - vagrant
    - install

- name: Uninstall Vagrant plugins
  become: True
  become_user: "{{ vagrant_plugins_user }}"
  command: "vagrant plugin uninstall {{ item.name }}"
  with_items: "{{ vagrant_plugins }}"
  when:
    - "{{ vagrant_plugins_user != '' }}"
    - "{{ item.state == 'absent' }}"
    - "{{ item.name in vagrant_initial_plugins_list.stdout }}"
  tags:
    - vagrant
    - install

